<?php

declare(strict_types=1);

namespace Elrise\Bundle\DbalBundle\BulkTestCommands;

use Doctrine\DBAL\Connection;
use Elrise\Bundle\DbalBundle\Manager\Contract\BulkInserterInterface;
use Symfony\Component\Console\Attribute\AsCommand;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Output\OutputInterface;

#[AsCommand(
    name: 'dbal:test:bulk-insert-many',
    description: '–í—Å—Ç–∞–≤–ª—è–µ—Ç N –∑–∞–ø–∏—Å–µ–π –≤ —Ç–∞–±–ª–∏—Ü—É test_data_types —á–µ—Ä–µ–∑ insertMany().',
)]
final class BulkInsertManyCommand extends AbstractTestCommand
{
    public function __construct(
        protected Connection $connection,
        private readonly BulkInserterInterface $bulkInserter,
    ) {
        parent::__construct();
    }

    protected function execute(InputInterface $input, OutputInterface $output): int
    {
        $output->writeln("üîÑ –í—Å—Ç–∞–≤–∫–∞ $this->count –∑–∞–ø–∏—Å–µ–π —á–µ—Ä–µ–∑ bulk insert (—á–∞–Ω–∫–∏ –ø–æ $this->chunkSize), –∫—Ä—É–≥–æ–≤ –≤—Å—Ç–∞–≤–∫–∏: $this->cycle");

        $this->truncateTable(self::TABLE_NAME);

        $result = $this->runBenchmark(
            fn (array $buffer) => $this->bulkInserter->setChunkSize($this->chunkSize)->insertMany(self::TABLE_NAME, $buffer),
            $output,
        );

        $count = (int) $this->connection->createQueryBuilder()
            ->select('COUNT(*)')
            ->from(self::TABLE_NAME)
            ->executeQuery()->fetchOne();

        if ($count === $this->count) {
            $output->writeln("üîé –ü—Ä–æ–≤–µ—Ä–∫–∞: –≤—Å—Ç–∞–≤–ª–µ–Ω–æ $count –∑–∞–ø–∏—Å–µ–π ‚Äî ‚úÖ OK\n");
        } else {
            $output->writeln("‚ö†Ô∏è –ü—Ä–æ–≤–µ—Ä–∫–∞: –æ–∂–∏–¥–∞–ª–æ—Å—å $this->count –∑–∞–ø–∏—Å–µ–π, –Ω–∞–π–¥–µ–Ω–æ: $count ‚Äî ‚ùå ERROR\n");
        }

        return $result;
    }

    protected function getTestType(): string
    {
        return 'bulk-insert';
    }
}
